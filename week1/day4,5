Implement the Input Parser component of the simulation module.
python
class InputParser:
    def __init__(self):
        self.input_params = {}

    def parse_input(self, input_data):
        # Parse input data and validate parameters
        self.input_params['tool_diameter'] = input_data['tool_diameter']
        self.input_params['feed_rate'] = input_data['feed_rate']
        self.input_params['material_properties'] = input_data['material_properties']
        self.input_params['workpiece_geometry'] = input_data['workpiece_geometry']
        self.input_params['milling_parameters'] = input_data['milling_parameters']

        # Validate input parameters
        self.validate_input()

    def validate_input(self):
        # Validate input parameters (e.g., check for valid values, ranges, etc.)
        pass

    def get_input_params(self):
        return self.input_params
class MaterialModel:
    def __init__(self, material_properties):
        self.material_properties = material_properties

    def get_material_density(self):
        return self.material_properties['density']

    def get_material_hardness(self):
        return self.material_properties['hardness']

    def get_material_thermal_conductivity(self):
        return self.material_properties['thermal_conductivity']

    def calculate_material_removal_rate(self, tool_diameter, feed_rate):
        # Calculate material removal rate based on material properties and tool parameters
        pass
